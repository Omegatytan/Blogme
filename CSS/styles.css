/* Applies to the entire body of the HTML document (except where overridden by more specific
selectors). */
body {
  font-size: 20px;
  max-width: 1224px;
  min-width: 1080px;
  margin-left: auto;
  margin-right: auto;
}
.Main {
  box-sizing: border-box;
  column-count: 3;
  column-rule: 4px dotted rgb(79, 185, 227);
  grid-template-columns: repeat(3, 1fr);
  text-align: center;
}
/* Targets the class of body. */
.body-content {
  margin-left: auto;
  margin-right: auto;
  background-color: #63fff7;
  border: 2px solid;
}
/* nav, ul, li, A */
/* targets the head of my resume.html */
.resume-head {
  border-radius: 20px;
  text-align: center;
  font-size: 20px;
  background-color: #3af07f;
}
/* Targets the first letter of the specified div element. */
header div p::first-letter {
  font-size: 25px;
  color: blue;
}

.Top_of_Page {
  border: 5px;
  border-bottom: black;
  border-style: double;
}
/* the class i'm using for the navigation of my file. Nav, li, a*/
.navigation {
  border-style: none;
  padding: 15px 32px;
  display: inline-block;
}

/* nav ul li a  */
.inline {
  display: inline-block;
  padding: 10px;
}
h1 {
  text-align: center;
  font-size: 30px;
  background-color: #3af07f;
  border: 5px solid black;
  display: block;
  margin: auto;
  border-radius: 10px;
  font-family: "Noto Sans Mono", monospace;
}
/* targets the class named Header_One */
h1.Header-One {
  background-color: #3af07f;
  font-size: 25px;
  font-family: "Noto Sans Mono", monospace;
  line-height: 30px;
  letter-spacing: 5px;
  font-weight: Bold;
  border: 3px solid darkblue;
  column-span: all;
  text-align: center;
  margin: 5%;
}
/* targets class Header_Two to make changes. */
.Header_Two {
  font-size: 35px;
  margin: 5%;
  padding: 5%;
  margin-top: 0;
}
.Span {
  margin: 2%;
}
/* Targets an ID in the html file which is linked to a div wrapping all my pictures in gallery. */
#Pictures {
  padding: 0%;
  margin: 0%;
  border: 0px;
  column-count: 3;
  column-rule: 4px dotted rgb(79, 185, 227);
  grid-template-columns: repeat(3, 1fr);
  text-align: center;
}
.col {
  background-color: aqua;
  width: 100%;
  margin: auto;
  overflow: hidden;
}
.img1 {
  float: right;
}

.relative {
  position: relative;
  left: 25%;
  top: 1%;
  bottom: 120px;
}

ul {
  font-family: "Roboto Condensed", sans-serif;
  font-size: 16px;
  list-style: square;
}
ol {
  font-family: "Roboto Condensed", sans-serif;
  font-size: 16px;
}
Dl {
  font-family: "Roboto Condensed", sans-serif;
  font-size: 16px;
}

nav A:link {
  font-family: "Roboto Condensed", sans-serif;
  font-size: 20px;
  background-color: #f0a62e;
}

Nav A:hover {
  font-family: "Roboto Condensed", sans-serif;
  font-size: 20px;
  color: azure;
}
nav A:visited {
  font-family: "Roboto Condensed", sans-serif;
  font-size: 20px;
  background-color: #f0a62e;
}
nav A:focus {
  font-family: "Roboto Condensed", sans-serif;
  font-size: 20px;
  background-color: #f0655d;
}
nav A:active {
  font-family: "Roboto Condensed", sans-serif;
  font-size: 20px;
  background-color: green;
}

/* 
Div {
  margin: auto;
  text-align: center;
} */
li {
  font-size: 1rem;
  letter-spacing: 1px;
}
/* ul {
  list-style-type: square;
  list-style-position: outside;
} */
footer {
  background-color: #1fa39d;
  column-span: all;
  display: flex;
  font-size: 1rem;
}

footer a:hover {
  background-color: #51a4f0;
}

footer a:link {
  background: #1fa39d;
}
footer a:visited {
  background-color: aliceblue;
}
.Selfie {
  float: left;
}
nav ul {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
}

video {
  width: 20%;
  height: 20%;
  padding: 10px;
  margin: 0px;
  border: 5px blue dotted;
  border-radius: 20px;
  box-shadow: 10px 10px 25px black;
}
/* Styles the Form */
form {
  margin: 0 auto;
  width: 75%;
  padding: 1em;
  border: 1px solid #ccc;
  border-radius: 1em;
  display: block;
}
.Contact_Info {
  padding: 3px;
  font-size: 15px;
}

/*Styles Text areas  you can type in*/
input[type="text"],
select,
textarea {
  width: 100%;
  padding: 5px;
  border: 1px solid black;
  border-radius: 4px;
  box-sizing: border-box;
  margin-top: 3px;
  margin-bottom: 5px;
}

/* Style the submit button*/
input[type="Submit"] {
  background-color: #04aa6d;
  color: white;
  padding: 12px 20px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

.container {
  border-radius: 20px;
  background-color: black;
}
table {
  margin: 0 auto;
  border: 2px dotted;
  border-collapse: collapse;
}

td,
th {
  padding: 1rem;
  border: 2px dotted;
}
caption {
  font-size: 2rem;
  font-weight: bold;
  text-align: left;
  color: darkorchid;
}
th {
  text-align: left;
  font-weight: bold;
  font-size: 1rem;
  background-color: aquamarine;
}

/* Can make a striped table using 
tbdoy tr:nth-child(Even/odd) to select even/odd table rows. */
/* Phone */
@media screen and (max-width: 300px), (max-width: 749px) {
  Nav ul li a {
    flex-direction: column;
    width: 100px;
    align-items: center;
    display: flex;
  }
  body {
    font-size: 20px;
  }
  .Main {
    column-count: 1;
    page-break-inside: avoid;
    min-width: 300px;
  }
  body {
    column-count: 1;
    min-width: 300px;
  }
  #Pictures {
    grid-template-columns: 800px;
    text-align: center;
    justify-content: center;
    column-count: 1;
  }
  .col {
    overflow: hidden;
    width: 100%;
  }
}
/* tablet */
@media screen and (min-width: 750px) and (max-width: 1023px) {
  body {
    font-size: 15px;
    min-width: 1023px;
  }
  .Main {
    column-count: 2;
    page-break-inside: avoid;
    column-width: 20px;
  }
  /* p {
    column-count: 2;
    page-break-inside: avoid;
    column-width: 20px;
  } */
  nav ul {
    margin-bottom: 10px;
    width: 1000px;
    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
  }
  nav li {
    display: block;
    padding: 5px 5px;
    text-align: center;
  }
  #Pictures {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    text-align: center;
  }
}

/* The viewport changes I used in practice and apply. @Media min width is for when the screen decreases
in size, to add properties to other elements, such as the nav, main, aside.  in this case the min width
is 600px so when the width of the users screen gets to 600 px theses changes are applied.
@media (min-width: 600px) {
  nav {
    width: 25%;
  }
  main {
    width: 75%;
    float: left;
  }
  aside {
    clear: Both;
  }
}
@media (min-width: 850px) {
  Main {
    width: 50%;
  }

  aside {
    width: 25%;
    clear: none;
    float: right;
  }

  footer {
    clear: both;
  }
}
to make a responisive image you set the img as 
Srcset = IMG Location 1x (Can be 2x 3x etc) , 
img location 2x)
the list is seperated by commas and allows the browser to pick which img is approite for the time.
you have to have the img saved as the ratio you want. such as 480px, 1080px, 1940px etc.

background property to add background imgs to files
background-image: url(img location)
background-repeat: no repeat; = img wont repeat if it fits into an area it'll only show once.s
background-position = gives a position relative to the container
background-size = width and height, 1st value is the width, 2nd is the height.*/

/* TO add grids use 
display: Grid;
grid-template-columns: 100px 100px 100px; which creates 3 columns
grid-template-row: 100px 100px; which creates 2 rows.
FR is a fraction of avaialbe space. 1fr 1fr 1fr = 3 columns
if set to 1fr 2fr 1fr then the 2nd value will be larger with 3 columns
repeat(3, 1fr) will repeat 1fr 1fr 1fr

gap adds gutters
*/
